/*
 * generated by Xtext 2.15.0
 */
package mars.ru.des.robot.validation

import java.util.List
import mars.ru.des.robot.taskDSL.Action
import mars.ru.des.robot.taskDSL.Avoid
import mars.ru.des.robot.taskDSL.DriveUntil
import mars.ru.des.robot.taskDSL.Task
import org.eclipse.xtext.validation.Check

/**
 * This class contains custom validation rules. 
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class TaskDSLValidator extends AbstractTaskDSLValidator {

	public static val INVALID_NAME = 'invalidName'

	private Action ac;
	private List<Avoid> avoids;
	private String errorMsg;

	@Check
	def checkActionAndDetectorObjectNotTheSame(Task task) {
		ac = task.getAction();
		if (ac instanceof DriveUntil) {
			avoids = task.getDetector().getAvoids();

			for (Avoid av : avoids) {
				if (av.getObject() === ac.getObject() && av.getColor() === ac.getColor()) {
					errorMsg = "Cannot avoid the same object as you are trying to find"
							+ (if (av.getColor === null) "" else av.getColor.toString())
							+ av.getObject().toString();
					
					error(errorMsg, null)
				}
			}
		}
	}

}
